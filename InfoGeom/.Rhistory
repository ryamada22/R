points(Q.ms[1],Q.ms[2],pch=20,cex=5,col=2)
text(Q.ms[1]+0.1,Q.ms[2],"Q")
P.thetas <- my.ms2theta(P.ms[1],P.ms[2])
P.etas <- my.ms2eta(P.ms[1],P.ms[2])
Q.thetas <- my.ms2theta(Q.ms[1],Q.ms[2])
Q.etas <- my.ms2eta(Q.ms[1],Q.ms[2])
points(t,sqrt(t/P.thetas[1]),type="l",col=4,lwd = 3)
points(t,sqrt(t/Q.thetas[1]),type="l",col=4,lwd = 3)
points(sqrt(P.etas[2]) * cos(t),sqrt(P.etas[2])* sin(t),type="l",col=1,lwd = 3)
points(sqrt(Q.etas[2]) * cos(t),sqrt(Q.etas[2])* sin(t),type="l",col=1,lwd = 3)
abline(h=sqrt(-1/(2*P.thetas[2])),col=4,lwd=3)
abline(h=sqrt(-1/(2*Q.thetas[2])),col=4,lwd=3)
abline(v=P.etas[1],col=1,lwd=3)
abline(v=Q.etas[1],col=1,lwd=3)
points(R1.ms[1],R1.ms[2],pch=20,cex=5,col=3)
points(R2.ms[1],R2.ms[2],pch=20,cex=5,col=4)
points(R3.ms[1],R3.ms[2],pch=20,cex=5,col=5)
points(R4.ms[1],R4.ms[2],pch=20,cex=5,col=6)
text(R1.ms[1]+0.1,R1.ms[2],"R1")
text(R2.ms[1]-0.1,R2.ms[2],"R2")
text(R3.ms[1]-0.1,R3.ms[2],"R3")
text(R4.ms[1]+0.1,R4.ms[2],"R4")
t <- seq(from=0,to=1,length=100)
line.theta1 <- P.thetas[1] + t * (Q.thetas[1]-P.thetas[1])
line.theta2 <- P.thetas[2] + t * (Q.thetas[2]-P.thetas[2])
line.eta1 <- P.etas[1] + t * (Q.etas[1]-P.etas[1])
line.eta2 <- P.etas[2] + t * (Q.etas[2]-P.etas[1])
line.theta.ms <- matrix(0,length(t),2)
line.eta.ms <- matrix(0,length(t),2)
for(i in 1:length(t)){
line.theta.ms[i,] <- my.theta2ms(line.theta1[i],line.theta2[i])
line.eta.ms[i,] <- my.eta2ms(line.eta1[i],line.eta2[i])
}
points(line.theta.ms[,1],line.theta.ms[,2],type="l",col=3,lwd=3)
points(line.eta.ms[,1],line.eta.ms[,2],type="l",col=1,lwd=3)
dim(line.theta)
plot(line.eta.ms)
plot(line.theta.ms)
Q.etas
my.eta2ms(Q.etas)
my.eta2ms(Q.etas[1],Q.etas[2])
fr <- matrix(c(-0.5,0,0.5,0.5),byrow=TRUE,2,2)
plot(fr,asp=1,col=0,xlim=c(0,0.6),ylim=c(0.4,1))
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(theta1)){
points(t,sqrt(t/theta1[i]),type="l",col=2)
points(-t,sqrt(t/theta1[i]),type="l",col=2)
}
for(i in 1:length(theta2)){
abline(h=sqrt(-1/(2*theta2[i])),col=3)
}
for(i in 1:length(eta1)){
abline(v=eta1[i],col=4)
}
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(eta2)){
points(eta2[i] * cos(t),eta2[i] * sin(t),type="l",col=5)
}
P.ms <- c(0.4,0.4)
points(P.ms[1],P.ms[2],pch=20,cex=5)
text(P.ms[1]+0.1,P.ms[2],"P")
Q.ms <- c(0.6,0.8)
points(Q.ms[1],Q.ms[2],pch=20,cex=5,col=2)
text(Q.ms[1]+0.1,Q.ms[2],"Q")
P.thetas <- my.ms2theta(P.ms[1],P.ms[2])
P.etas <- my.ms2eta(P.ms[1],P.ms[2])
Q.thetas <- my.ms2theta(Q.ms[1],Q.ms[2])
Q.etas <- my.ms2eta(Q.ms[1],Q.ms[2])
points(t,sqrt(t/P.thetas[1]),type="l",col=4,lwd = 3)
points(t,sqrt(t/Q.thetas[1]),type="l",col=4,lwd = 3)
points(sqrt(P.etas[2]) * cos(t),sqrt(P.etas[2])* sin(t),type="l",col=1,lwd = 3)
points(sqrt(Q.etas[2]) * cos(t),sqrt(Q.etas[2])* sin(t),type="l",col=1,lwd = 3)
abline(h=sqrt(-1/(2*P.thetas[2])),col=4,lwd=3)
abline(h=sqrt(-1/(2*Q.thetas[2])),col=4,lwd=3)
abline(v=P.etas[1],col=1,lwd=3)
abline(v=Q.etas[1],col=1,lwd=3)
points(R1.ms[1],R1.ms[2],pch=20,cex=5,col=3)
points(R2.ms[1],R2.ms[2],pch=20,cex=5,col=4)
points(R3.ms[1],R3.ms[2],pch=20,cex=5,col=5)
points(R4.ms[1],R4.ms[2],pch=20,cex=5,col=6)
text(R1.ms[1]+0.1,R1.ms[2],"R1")
text(R2.ms[1]-0.1,R2.ms[2],"R2")
text(R3.ms[1]-0.1,R3.ms[2],"R3")
text(R4.ms[1]+0.1,R4.ms[2],"R4")
t <- seq(from=0,to=1,length=100)
line.theta1 <- P.thetas[1] + t * (Q.thetas[1]-P.thetas[1])
line.theta2 <- P.thetas[2] + t * (Q.thetas[2]-P.thetas[2])
line.eta1 <- P.etas[1] + t * (Q.etas[1]-P.etas[1])
line.eta2 <- P.etas[2] + t * (Q.etas[2]-P.etas[2])
line.theta.ms <- matrix(0,length(t),2)
line.eta.ms <- matrix(0,length(t),2)
for(i in 1:length(t)){
line.theta.ms[i,] <- my.theta2ms(line.theta1[i],line.theta2[i])
line.eta.ms[i,] <- my.eta2ms(line.eta1[i],line.eta2[i])
}
points(line.theta.ms[,1],line.theta.ms[,2],type="l",col=4,lwd=3)
points(line.eta.ms[,1],line.eta.ms[,2],type="l",col=1,lwd=3)
fr <- matrix(c(-0.5,0,0.5,0.5),byrow=TRUE,2,2)
plot(fr,asp=1,col=0,xlim=c(0,0.6),ylim=c(0.4,1))
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(theta1)){
points(t,sqrt(t/theta1[i]),type="l",col=2)
points(-t,sqrt(t/theta1[i]),type="l",col=2)
}
for(i in 1:length(theta2)){
abline(h=sqrt(-1/(2*theta2[i])),col=3)
}
for(i in 1:length(eta1)){
abline(v=eta1[i],col=4)
}
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(eta2)){
points(eta2[i] * cos(t),eta2[i] * sin(t),type="l",col=5)
}
P.ms <- c(0.4,0.4)
points(P.ms[1],P.ms[2],pch=20,cex=5)
text(P.ms[1]+0.1,P.ms[2],"P")
Q.ms <- c(0.6,0.8)
points(Q.ms[1],Q.ms[2],pch=20,cex=5,col=2)
text(Q.ms[1]+0.1,Q.ms[2],"Q")
P.thetas <- my.ms2theta(P.ms[1],P.ms[2])
P.etas <- my.ms2eta(P.ms[1],P.ms[2])
Q.thetas <- my.ms2theta(Q.ms[1],Q.ms[2])
Q.etas <- my.ms2eta(Q.ms[1],Q.ms[2])
points(t,sqrt(t/P.thetas[1]),type="l",col=4,lwd = 3)
points(t,sqrt(t/Q.thetas[1]),type="l",col=4,lwd = 3)
points(sqrt(P.etas[2]) * cos(t),sqrt(P.etas[2])* sin(t),type="l",col=1,lwd = 3)
points(sqrt(Q.etas[2]) * cos(t),sqrt(Q.etas[2])* sin(t),type="l",col=1,lwd = 3)
abline(h=sqrt(-1/(2*P.thetas[2])),col=4,lwd=3)
abline(h=sqrt(-1/(2*Q.thetas[2])),col=4,lwd=3)
abline(v=P.etas[1],col=1,lwd=3)
abline(v=Q.etas[1],col=1,lwd=3)
points(R1.ms[1],R1.ms[2],pch=20,cex=5,col=3)
points(R2.ms[1],R2.ms[2],pch=20,cex=5,col=4)
points(R3.ms[1],R3.ms[2],pch=20,cex=5,col=5)
points(R4.ms[1],R4.ms[2],pch=20,cex=5,col=6)
text(R1.ms[1]+0.1,R1.ms[2],"R1")
text(R2.ms[1]-0.1,R2.ms[2],"R2")
text(R3.ms[1]-0.1,R3.ms[2],"R3")
text(R4.ms[1]+0.1,R4.ms[2],"R4")
t <- seq(from=0,to=1,length=100)
line.theta1 <- P.thetas[1] + t * (Q.thetas[1]-P.thetas[1])
line.theta2 <- P.thetas[2] + t * (Q.thetas[2]-P.thetas[2])
line.eta1 <- P.etas[1] + t * (Q.etas[1]-P.etas[1])
line.eta2 <- P.etas[2] + t * (Q.etas[2]-P.etas[2])
line.theta.ms <- matrix(0,length(t),2)
line.eta.ms <- matrix(0,length(t),2)
for(i in 1:length(t)){
line.theta.ms[i,] <- my.theta2ms(line.theta1[i],line.theta2[i])
line.eta.ms[i,] <- my.eta2ms(line.eta1[i],line.eta2[i])
}
points(line.theta.ms[,1],line.theta.ms[,2],type="l",col=4,lwd=3)
points(line.eta.ms[,1],line.eta.ms[,2],type="l",col=1,lwd=3)
fr <- matrix(c(-0.5,0,0.5,0.5),byrow=TRUE,2,2)
plot(fr,asp=1,col=0,xlim=c(0,0.6),ylim=c(0.4,1))
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(theta1)){
points(t,sqrt(t/theta1[i]),type="l",col=2)
points(-t,sqrt(t/theta1[i]),type="l",col=2)
}
for(i in 1:length(theta2)){
abline(h=sqrt(-1/(2*theta2[i])),col=3)
}
for(i in 1:length(eta1)){
abline(v=eta1[i],col=4)
}
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(eta2)){
points(eta2[i] * cos(t),eta2[i] * sin(t),type="l",col=5)
}
P.ms <- c(0.4,0.4)
points(P.ms[1],P.ms[2],pch=20,cex=5)
text(P.ms[1]+0.1,P.ms[2],"P")
Q.ms <- c(0.6,0.8)
points(Q.ms[1],Q.ms[2],pch=20,cex=5,col=2)
text(Q.ms[1]+0.1,Q.ms[2],"Q")
P.thetas <- my.ms2theta(P.ms[1],P.ms[2])
P.etas <- my.ms2eta(P.ms[1],P.ms[2])
Q.thetas <- my.ms2theta(Q.ms[1],Q.ms[2])
Q.etas <- my.ms2eta(Q.ms[1],Q.ms[2])
points(t,sqrt(t/P.thetas[1]),type="l",col=4,lwd = 3)
points(t,sqrt(t/Q.thetas[1]),type="l",col=4,lwd = 3)
points(sqrt(P.etas[2]) * cos(t),sqrt(P.etas[2])* sin(t),type="l",col=1,lwd = 3)
points(sqrt(Q.etas[2]) * cos(t),sqrt(Q.etas[2])* sin(t),type="l",col=1,lwd = 3)
abline(h=sqrt(-1/(2*P.thetas[2])),col=4,lwd=3)
abline(h=sqrt(-1/(2*Q.thetas[2])),col=4,lwd=3)
abline(v=P.etas[1],col=1,lwd=3)
abline(v=Q.etas[1],col=1,lwd=3)
points(R1.ms[1],R1.ms[2],pch=20,cex=5,col=3)
points(R2.ms[1],R2.ms[2],pch=20,cex=5,col=4)
points(R3.ms[1],R3.ms[2],pch=20,cex=5,col=5)
points(R4.ms[1],R4.ms[2],pch=20,cex=5,col=6)
text(R1.ms[1]+0.1,R1.ms[2],"R1")
text(R2.ms[1]-0.1,R2.ms[2],"R2")
text(R3.ms[1]-0.1,R3.ms[2],"R3")
text(R4.ms[1]+0.1,R4.ms[2],"R4")
t <- seq(from=0,to=1,length=100)
line.theta1 <- P.thetas[1] + t * (Q.thetas[1]-P.thetas[1])
line.theta2 <- P.thetas[2] + t * (Q.thetas[2]-P.thetas[2])
line.eta1 <- P.etas[1] + t * (Q.etas[1]-P.etas[1])
line.eta2 <- P.etas[2] + t * (Q.etas[2]-P.etas[2])
line.theta.ms <- matrix(0,length(t),2)
line.eta.ms <- matrix(0,length(t),2)
for(i in 1:length(t)){
line.theta.ms[i,] <- my.theta2ms(line.theta1[i],line.theta2[i])
line.eta.ms[i,] <- my.eta2ms(line.eta1[i],line.eta2[i])
}
points(line.theta.ms[,1],line.theta.ms[,2],type="l",col=4,lwd=5)
points(line.eta.ms[,1],line.eta.ms[,2],type="l",col=1,lwd=2,lty=2)
fr <- matrix(c(-0.5,0,0.5,0.5),byrow=TRUE,2,2)
plot(fr,asp=1,col=0,xlim=c(0,0.6),ylim=c(0.4,1))
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(theta1)){
points(t,sqrt(t/theta1[i]),type="l",col=2)
points(-t,sqrt(t/theta1[i]),type="l",col=2)
}
for(i in 1:length(theta2)){
abline(h=sqrt(-1/(2*theta2[i])),col=3)
}
for(i in 1:length(eta1)){
abline(v=eta1[i],col=4)
}
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(eta2)){
points(eta2[i] * cos(t),eta2[i] * sin(t),type="l",col=5)
}
P.ms <- c(0.4,0.4)
points(P.ms[1],P.ms[2],pch=20,cex=5)
text(P.ms[1]+0.1,P.ms[2],"P")
Q.ms <- c(0.6,0.8)
points(Q.ms[1],Q.ms[2],pch=20,cex=5,col=2)
text(Q.ms[1]+0.1,Q.ms[2],"Q")
P.thetas <- my.ms2theta(P.ms[1],P.ms[2])
P.etas <- my.ms2eta(P.ms[1],P.ms[2])
Q.thetas <- my.ms2theta(Q.ms[1],Q.ms[2])
Q.etas <- my.ms2eta(Q.ms[1],Q.ms[2])
points(t,sqrt(t/P.thetas[1]),type="l",col=4,lwd = 3)
points(t,sqrt(t/Q.thetas[1]),type="l",col=4,lwd = 3)
points(sqrt(P.etas[2]) * cos(t),sqrt(P.etas[2])* sin(t),type="l",col=1,lwd = 3)
points(sqrt(Q.etas[2]) * cos(t),sqrt(Q.etas[2])* sin(t),type="l",col=1,lwd = 3)
abline(h=sqrt(-1/(2*P.thetas[2])),col=4,lwd=3)
abline(h=sqrt(-1/(2*Q.thetas[2])),col=4,lwd=3)
abline(v=P.etas[1],col=1,lwd=3)
abline(v=Q.etas[1],col=1,lwd=3)
points(R1.ms[1],R1.ms[2],pch=20,cex=5,col=3)
points(R2.ms[1],R2.ms[2],pch=20,cex=5,col=4)
points(R3.ms[1],R3.ms[2],pch=20,cex=5,col=5)
points(R4.ms[1],R4.ms[2],pch=20,cex=5,col=6)
text(R1.ms[1]+0.1,R1.ms[2],"R1")
text(R2.ms[1]-0.1,R2.ms[2],"R2")
text(R3.ms[1]-0.1,R3.ms[2],"R3")
text(R4.ms[1]+0.1,R4.ms[2],"R4")
t <- seq(from=0,to=1,length=100)
line.theta1 <- P.thetas[1] + t * (Q.thetas[1]-P.thetas[1])
line.theta2 <- P.thetas[2] + t * (Q.thetas[2]-P.thetas[2])
line.eta1 <- P.etas[1] + t * (Q.etas[1]-P.etas[1])
line.eta2 <- P.etas[2] + t * (Q.etas[2]-P.etas[2])
line.theta.ms <- matrix(0,length(t),2)
line.eta.ms <- matrix(0,length(t),2)
for(i in 1:length(t)){
line.theta.ms[i,] <- my.theta2ms(line.theta1[i],line.theta2[i])
line.eta.ms[i,] <- my.eta2ms(line.eta1[i],line.eta2[i])
}
points(line.theta.ms[,1],line.theta.ms[,2],type="l",col=4,lwd=5)
points(line.eta.ms[,1],line.eta.ms[,2],type="l",col=1,lwd=2,lty=2)
fr <- matrix(c(-0.5,0,0.5,0.5),byrow=TRUE,2,2)
plot(fr,asp=1,col=0,xlim=c(0,0.6),ylim=c(0.4,1))
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(theta1)){
points(t,sqrt(t/theta1[i]),type="l",col=2)
points(-t,sqrt(t/theta1[i]),type="l",col=2)
}
for(i in 1:length(theta2)){
abline(h=sqrt(-1/(2*theta2[i])),col=3)
}
for(i in 1:length(eta1)){
abline(v=eta1[i],col=4)
}
t <- seq(from=0,to=1,length=100) * 2*pi
for(i in 1:length(eta2)){
points(eta2[i] * cos(t),eta2[i] * sin(t),type="l",col=5)
}
P.ms <- c(0.4,0.4)
points(P.ms[1],P.ms[2],pch=20,cex=5)
text(P.ms[1]+0.1,P.ms[2],"P")
Q.ms <- c(0.6,0.8)
points(Q.ms[1],Q.ms[2],pch=20,cex=5,col=2)
text(Q.ms[1]+0.1,Q.ms[2],"Q")
P.thetas <- my.ms2theta(P.ms[1],P.ms[2])
P.etas <- my.ms2eta(P.ms[1],P.ms[2])
Q.thetas <- my.ms2theta(Q.ms[1],Q.ms[2])
Q.etas <- my.ms2eta(Q.ms[1],Q.ms[2])
points(t,sqrt(t/P.thetas[1]),type="l",col=4,lwd = 3)
points(t,sqrt(t/Q.thetas[1]),type="l",col=4,lwd = 3)
points(sqrt(P.etas[2]) * cos(t),sqrt(P.etas[2])* sin(t),type="l",col=1,lwd = 3)
points(sqrt(Q.etas[2]) * cos(t),sqrt(Q.etas[2])* sin(t),type="l",col=1,lwd = 3)
abline(h=sqrt(-1/(2*P.thetas[2])),col=4,lwd=3)
abline(h=sqrt(-1/(2*Q.thetas[2])),col=4,lwd=3)
abline(v=P.etas[1],col=1,lwd=3)
abline(v=Q.etas[1],col=1,lwd=3)
points(R1.ms[1],R1.ms[2],pch=20,cex=5,col=3)
points(R2.ms[1],R2.ms[2],pch=20,cex=5,col=4)
points(R3.ms[1],R3.ms[2],pch=20,cex=5,col=5)
points(R4.ms[1],R4.ms[2],pch=20,cex=5,col=6)
text(R1.ms[1]+0.1,R1.ms[2],"R1")
text(R2.ms[1]-0.1,R2.ms[2],"R2")
text(R3.ms[1]-0.1,R3.ms[2],"R3")
text(R4.ms[1]+0.1,R4.ms[2],"R4")
t <- seq(from=0,to=1,length=100)
line.theta1 <- P.thetas[1] + t * (Q.thetas[1]-P.thetas[1])
line.theta2 <- P.thetas[2] + t * (Q.thetas[2]-P.thetas[2])
line.eta1 <- P.etas[1] + t * (Q.etas[1]-P.etas[1])
line.eta2 <- P.etas[2] + t * (Q.etas[2]-P.etas[2])
line.theta.ms <- matrix(0,length(t),2)
line.eta.ms <- matrix(0,length(t),2)
for(i in 1:length(t)){
line.theta.ms[i,] <- my.theta2ms(line.theta1[i],line.theta2[i])
line.eta.ms[i,] <- my.eta2ms(line.eta1[i],line.eta2[i])
}
points(line.theta.ms[,1],line.theta.ms[,2],type="l",col=4,lwd=5)
points(line.eta.ms[,1],line.eta.ms[,2],type="l",col=2,lwd=2,lty=2)
sum(dP * (log(dP)-log(dQ)))
sum(dP * (log(dP)-log(dR1))) + sum(dR1 * (log(dR1)-log(dQ)))
x.diff <- x[2]-x[1]
sum(dP * (log(dP)-log(dQ))) * x.diff
sum(dP * (log(dP)-log(dR1))) + sum(dR1 * (log(dR1)-log(dQ))) * x.diff
x.diff <- x[2]-x[1]
sum(dP * (log(dP)-log(dQ))) * x.diff
(sum(dP * (log(dP)-log(dR1))) + sum(dR1 * (log(dR1)-log(dQ)))) * x.diff
x.diff <- x[2]-x[1]
sum(dP * (log(dP)-log(dQ))) * x.diff
(sum(dP * (log(dP)-log(dR2))) + sum(dR2 * (log(dR2)-log(dQ)))) * x.diff
x.diff <- x[2]-x[1]
sum(dP * (log(dP)-log(dQ))) * x.diff
(sum(dP * (log(dP)-log(dR2))) + sum(dR2 * (log(dR2)-log(dQ)))) * x.diff
(sum(dP * (log(dP)-log(dR3))) + sum(dR3 * (log(dR3)-log(dQ)))) * x.diff
x.diff <- x[2]-x[1]
sum(dP * (log(dP)-log(dQ))) * x.diff
(sum(dP * (log(dP)-log(dR2))) + sum(dR2 * (log(dR2)-log(dQ)))) * x.diff
(sum(dP * (log(dP)-log(dR3))) + sum(dR3 * (log(dR3)-log(dQ)))) * x.diff
sum(dQ * (log(dQ)-log(dP))) * x.diff
(sum(dR1 * (log(dP)-log(dR1))) + sum(dQ * (log(dQ)-log(dR1)))) * x.diff
(sum(dP * (log(dP)-log(dR3))) + sum(dR3 * (log(dR3)-log(dQ)))) * x.diff
my.divergence <- function(dP,dQ,dx,alpha=1){
if(alpha==1){
ret <- sum(dP * (log(dP)-log(dQ))) * dx
}else{
ret <- sum(dQ * (log(dQ)-log(dP))) * dx
}
return ret
my.divergence <- function(dP,dQ,dx,alpha=1){
if(alpha==1){
ret <- sum(dP * (log(dP)-log(dQ))) * dx
}else{
ret <- sum(dQ * (log(dQ)-log(dP))) * dx
}
return(ret)
}
dx <- x[2]-x[1]
my.divergence(dP,dQ,dx,alpha=1)
my.divergence(dP,dQ,dx,alpha=-1)
my.divergence(dP,dR2,dx,alpha=1) + my.divergence(dR2,dQ,dx,alpha=1)
my.divergence(dP,dR2,dx,alpha=1) + my.divergence(dR2,dQ,dx,alpha=1)
my.divergence(dP,dR3,dx,alpha=1) + my.divergence(dR3,dQ,dx,alpha=1)
my.divergence(dP,dR2,dx,alpha=1) + my.divergence(dR2,dQ,dx,alpha=1)
my.divergence(dP,dR3,dx,alpha=1) + my.divergence(dR3,dQ,dx,alpha=1)
my.divergence(dP,dR1,dx,alpha=-1) + my.divergence(dR1,dQ,dx,alpha=-1)
my.divergence(dP,dR2,dx,alpha=1) + my.divergence(dR2,dQ,dx,alpha=1)
my.divergence(dP,dR3,dx,alpha=1) + my.divergence(dR3,dQ,dx,alpha=1)
my.divergence(dP,dR1,dx,alpha=-1) + my.divergence(dR1,dQ,dx,alpha=-1)
my.divergence(dP,dR4,dx,alpha=-1) + my.divergence(dR4,dQ,dx,alpha=-1)
my.divergence(dQ,dP,dx,alpha=1)
my.divergence(dQ,dP,dx,alpha=-1)
my.divergence(dQ,dP,dx,alpha=1)
my.divergence(dQ,dP,dx,alpha=-1)
my.divergence(dQ,dR1,dx,alpha=1) + my.divergence(dR1,dP,dx,alpha=1)
my.divergence(dP,dR3,dx,alpha=1) + my.divergence(dR3,dQ,dx,alpha=1)
my.divergence(dP,dR1,dx,alpha=-1) + my.divergence(dR1,dQ,dx,alpha=-1)
my.divergence(dP,dR4,dx,alpha=-1) + my.divergence(dR4,dQ,dx,alpha=-1)
my.divergence(dQ,dP,dx,alpha=1)
my.divergence(dQ,dP,dx,alpha=-1)
my.divergence(dQ,dR1,dx,alpha=1) + my.divergence(dR1,dP,dx,alpha=1)
my.divergence(dQ,dR4,dx,alpha=1) + my.divergence(dR4,dP,dx,alpha=1)
my.divergence(dQ,dR2,dx,alpha=-1) + my.divergence(dR2,dP,dx,alpha=-1)
my.divergence(dQ,dR3,dx,alpha=-1) + my.divergence(dR3,dP,dx,alpha=-1)
my.divergence <- function(dP,dQ,dx,alpha=1){
if(alpha==1){
ret <- sum(dP * (log(dP)-log(dQ))) * dx
}else{
ret <- sum(dQ * (log(dQ)-log(dP))) * dx
}
return(ret)
}
x <- seq(from=-10,to=10,length=10^4)
dP <- dnorm(x,P.ms[1],P.ms[2])
dQ <- dnorm(x,Q.ms[1],Q.ms[2])
dx <- x[2]-x[1]
# P->Q alpha=1
my.divergence(dP,dQ,dx,alpha=1)
# P->Q alpha=-1
my.divergence(dP,dQ,dx,alpha=-1)
# Q->P alpha=1
my.divergence(dQ,dP,dx,alpha=1)
# Q->P alpha=-1
my.divergence(dQ,dP,dx,alpha=-1)
my.divergence(dP,dR2,dx,alpha=1) + my.divergence(dR2,dQ,dx,alpha=1)
my.divergence(dP,dR3,dx,alpha=1) + my.divergence(dR3,dQ,dx,alpha=1)
my.divergence(dP,dR1,dx,alpha=-1) + my.divergence(dR1,dQ,dx,alpha=-1)
my.divergence(dP,dR4,dx,alpha=-1) + my.divergence(dR4,dQ,dx,alpha=-1)
dx <- x[2]-x[1]
my.divergence(dP,dQ,dx,alpha=1)
my.divergence(dP,dQ,dx,alpha=-1)
dR1 <- dnorm(x,R1.ms[1],R1.ms[2])
dR2 <- dnorm(x,R2.ms[1],R2.ms[2])
dR3 <- dnorm(x,R3.ms[1],R3.ms[2])
dR4 <- dnorm(x,R4.ms[1],R4.ms[2])
my.divergence(dP,dQ,dx,alpha=1)
my.divergence(dP,dR2,dx,alpha=1) + my.divergence(dR2,dQ,dx,alpha=1)
my.divergence(dP,dR2,dx,alpha=1) + my.divergence(dR3,dQ,dx,alpha=1)
dR1 <- dnorm(x,R1.ms[1],R1.ms[2])
dR2 <- dnorm(x,R2.ms[1],R2.ms[2])
dR3 <- dnorm(x,R3.ms[1],R3.ms[2])
dR4 <- dnorm(x,R4.ms[1],R4.ms[2])
my.divergence(dP,dQ,dx,alpha=1)
my.divergence(dP,dR2,dx,alpha=1) + my.divergence(dR2,dQ,dx,alpha=1)
my.divergence(dP,dR3,dx,alpha=1) + my.divergence(dR3,dQ,dx,alpha=1)
my.divergence <- function(dP,dQ,dx,alpha=-1){
if(alpha==-1){
ret <- sum(dP * (log(dP)-log(dQ))) * dx
}else{
ret <- sum(dQ * (log(dQ)-log(dP))) * dx
}
return(ret)
}
x <- seq(from=-10,to=10,length=10^4)
dP <- dnorm(x,P.ms[1],P.ms[2])
dQ <- dnorm(x,Q.ms[1],Q.ms[2])
dx <- x[2]-x[1]
# P->Q alpha=1
my.divergence(dP,dQ,dx,alpha=1)
# P->Q alpha=-1
my.divergence(dP,dQ,dx,alpha=-1)
# Q->P alpha=1
my.divergence(dQ,dP,dx,alpha=1)
# Q->P alpha=-1
my.divergence(dQ,dP,dx,alpha=-1)
dR1 <- dnorm(x,R1.ms[1],R1.ms[2])
dR2 <- dnorm(x,R2.ms[1],R2.ms[2])
dR3 <- dnorm(x,R3.ms[1],R3.ms[2])
dR4 <- dnorm(x,R4.ms[1],R4.ms[2])
my.divergence(dP,dQ,dx,alpha=1)
my.divergence(dP,dR2,dx,alpha=1) + my.divergence(dR2,dQ,dx,alpha=1)
my.divergence(dP,dR3,dx,alpha=1) + my.divergence(dR3,dQ,dx,alpha=1)
dR1 <- dnorm(x,R1.ms[1],R1.ms[2])
dR2 <- dnorm(x,R2.ms[1],R2.ms[2])
dR3 <- dnorm(x,R3.ms[1],R3.ms[2])
dR4 <- dnorm(x,R4.ms[1],R4.ms[2])
my.divergence(dP,dQ,dx,alpha=1)
my.divergence(dP,dR1,dx,alpha=1) + my.divergence(dR1,dQ,dx,alpha=1)
my.divergence(dP,dR4,dx,alpha=1) + my.divergence(dR4,dQ,dx,alpha=1)
my.divergence(dP,dQ,dx,alpha=-1)
my.divergence(dP,dR2,dx,alpha=-1) + my.divergence(dR2,dQ,dx,alpha=-1)
my.divergence(dP,dR3,dx,alpha=-1) + my.divergence(dR3,dQ,dx,alpha=-1)
make.kame.hyoushi <- function(ttl="",n.kame=30,kame.col="blue",sub=""){
t <- seq(from=0,to=1,length=1000)*2*pi
kora <- cbind(cos(t),sin(t))
s <- 1/4
teashi <- kora*s
thetas <- c(0,1,2,4,5)/6*2*pi
teashi.ctr <- cbind(cos(thetas),sin(thetas))
teashi.coords <- matrix(0,nrow=0,ncol=2)
for(i in 1:length(thetas)){
teashi.coords <- rbind(teashi.coords,cbind(teashi.ctr[i,1]+teashi[,1],teashi.ctr[i,2]+teashi[,2]))
}
teashi.out <- teashi.coords[which(apply(teashi.coords^2,1,sum)>1),]
shippo.st <- c(cos(pi),sin(pi))
shippo.s <- 0.1
shippo.l <- 0.4
shippo.x <- seq(from=0,to=-shippo.l,length=100)
shippo.y <- shippo.s * sin(shippo.x*2*pi/shippo.l)
shippo.coords <- cbind(shippo.st[1] + shippo.x,shippo.st[2]+shippo.y)
kame <- rbind(kora,teashi.out,shippo.coords)
#plot(rbind(kora,teashi.out,shippo.coords))
b <- 0.9
kame2 <- kame
kame2[,2] <- kame2[,2]*b
#plot(kame2,col=grey(1),axes=FALSE)
#points(kame2,cex=0.1,pch=20)
X <- matrix(0,nrow=0,ncol=2)
for(i in 1:n.kame){
theta <- runif(1)*2*pi
R <- matrix(c(cos(theta),-sin(theta),sin(theta),cos(theta)),2,2)
new.kame <- t(R %*% t(kame2))
mv <- runif(2)*n.kame/2
new.kame <- cbind(new.kame[,1]+mv[1],new.kame[,2]+mv[2])
X <- rbind(X,new.kame)
}
jpeg(filename = paste(ttl,".jpeg"), width = 5000, height = 5000,
quality = 100, pointsize = 180,bg = "white", res = NA,
restoreConsole = TRUE)
plot(X,col=grey(1),axes=FALSE,xlab="",ylab="",main=paste(ttl,"\n",sub))
points(X,cex=0.5,pch=20,xlim=range(X),ylim=range(X),col=kame.col)
dev.off()
}
# カメ頭数
n.kame <- 50
# カメ色
kame.col <- "orange"
# タイトル
ttl <- "InformationGeometry_5"
subttl <- "KLダイバージェンス"
make.kame.hyoushi(ttl,n.kame,kame.col,subttl)
